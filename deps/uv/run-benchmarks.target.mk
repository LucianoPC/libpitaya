# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := run-benchmarks
DEFS_Default := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D_GNU_SOURCE' \
	'-D_DARWIN_USE_64_BIT_INODE=1'

# Flags passed to all source files.
CFLAGS_Default := \
	-fasm-blocks \
	-mpascal-strings \
	-Os \
	-gdwarf-2 \
	-arch x86_64 \
	-Wall \
	-Wextra \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Default := \
	-g \
	--std=gnu89 \
	-pedantic

# Flags passed to only C++ files.
CFLAGS_CC_Default := \
	-g \
	--std=gnu89 \
	-pedantic

# Flags passed to only ObjC files.
CFLAGS_OBJC_Default :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Default :=

INCS_Default := \
	-Ideps/uv/include

OBJS := \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-async.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-async-pummel.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-fs-stat.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-getaddrinfo.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-loop-count.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-million-async.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-million-timers.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-multi-accept.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-ping-pongs.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-pound.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-pump.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-sizes.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-spawn.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-thread.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-tcp-write-batch.o \
	$(obj).target/$(TARGET)/deps/uv/test/benchmark-udp-pummel.o \
	$(obj).target/$(TARGET)/deps/uv/test/dns-server.o \
	$(obj).target/$(TARGET)/deps/uv/test/echo-server.o \
	$(obj).target/$(TARGET)/deps/uv/test/blackhole-server.o \
	$(obj).target/$(TARGET)/deps/uv/test/run-benchmarks.o \
	$(obj).target/$(TARGET)/deps/uv/test/runner.o \
	$(obj).target/$(TARGET)/deps/uv/test/runner-unix.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/libuv.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Default := \
	-arch x86_64 \
	-L$(builddir)

LIBTOOLFLAGS_Default :=

LIBS := \
	-lm

$(builddir)/run-benchmarks: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/run-benchmarks: LIBS := $(LIBS)
$(builddir)/run-benchmarks: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/run-benchmarks: LD_INPUTS := $(OBJS) $(builddir)/libuv.a
$(builddir)/run-benchmarks: TOOLSET := $(TOOLSET)
$(builddir)/run-benchmarks: $(OBJS) $(builddir)/libuv.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/run-benchmarks
# Add target alias
.PHONY: run-benchmarks
run-benchmarks: $(builddir)/run-benchmarks

