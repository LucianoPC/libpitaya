// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: big-message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from big-message.proto</summary>
  public static partial class BigMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for big-message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BigMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFiaWctbWVzc2FnZS5wcm90bxIGcHJvdG9zImQKDlBsYXllclJlc3BvbnNl",
            "EhAKCHB1YmxpY0lkGAEgASgJEhMKC2FjY2Vzc1Rva2VuGAIgASgJEgwKBG5h",
            "bWUYAyABKAkSDQoFaXRlbXMYBCADKAkSDgoGaGVhbHRoGAUgASgBIjUKA05Q",
            "QxIMCgRuYW1lGAEgASgJEg4KBmhlYWx0aBgCIAEoARIQCghwdWJsaWNJZBgD",
            "IAEoCSK6AQoSQmlnTWVzc2FnZVJlc3BvbnNlEiYKBnBsYXllchgBIAEoCzIW",
            "LnByb3Rvcy5QbGF5ZXJSZXNwb25zZRIyCgRucGNzGAIgAygLMiQucHJvdG9z",
            "LkJpZ01lc3NhZ2VSZXNwb25zZS5OcGNzRW50cnkSDgoGY2hlc3RzGAMgAygJ",
            "GjgKCU5wY3NFbnRyeRILCgNrZXkYASABKAkSGgoFdmFsdWUYAiABKAsyCy5w",
            "cm90b3MuTlBDOgI4ASJICgpCaWdNZXNzYWdlEgwKBGNvZGUYASABKAkSLAoI",
            "cmVzcG9uc2UYAiABKAsyGi5wcm90b3MuQmlnTWVzc2FnZVJlc3BvbnNlYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.PlayerResponse), global::Protos.PlayerResponse.Parser, new[]{ "PublicId", "AccessToken", "Name", "Items", "Health" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.NPC), global::Protos.NPC.Parser, new[]{ "Name", "Health", "PublicId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.BigMessageResponse), global::Protos.BigMessageResponse.Parser, new[]{ "Player", "Npcs", "Chests" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.BigMessage), global::Protos.BigMessage.Parser, new[]{ "Code", "Response" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerResponse : pb::IMessage<PlayerResponse> {
    private static readonly pb::MessageParser<PlayerResponse> _parser = new pb::MessageParser<PlayerResponse>(() => new PlayerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.BigMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerResponse(PlayerResponse other) : this() {
      publicId_ = other.publicId_;
      accessToken_ = other.accessToken_;
      name_ = other.name_;
      items_ = other.items_.Clone();
      health_ = other.health_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerResponse Clone() {
      return new PlayerResponse(this);
    }

    /// <summary>Field number for the "publicId" field.</summary>
    public const int PublicIdFieldNumber = 1;
    private string publicId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicId {
      get { return publicId_; }
      set {
        publicId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_items_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> items_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 5;
    private double health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PublicId != other.PublicId) return false;
      if (AccessToken != other.AccessToken) return false;
      if (Name != other.Name) return false;
      if(!items_.Equals(other.items_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Health, other.Health)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PublicId.Length != 0) hash ^= PublicId.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= items_.GetHashCode();
      if (Health != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Health);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PublicId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PublicId);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (Health != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Health);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PublicId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicId);
      }
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (Health != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerResponse other) {
      if (other == null) {
        return;
      }
      if (other.PublicId.Length != 0) {
        PublicId = other.PublicId;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      items_.Add(other.items_);
      if (other.Health != 0D) {
        Health = other.Health;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PublicId = input.ReadString();
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 41: {
            Health = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NPC : pb::IMessage<NPC> {
    private static readonly pb::MessageParser<NPC> _parser = new pb::MessageParser<NPC>(() => new NPC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NPC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.BigMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NPC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NPC(NPC other) : this() {
      name_ = other.name_;
      health_ = other.health_;
      publicId_ = other.publicId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NPC Clone() {
      return new NPC(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 2;
    private double health_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "publicId" field.</summary>
    public const int PublicIdFieldNumber = 3;
    private string publicId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicId {
      get { return publicId_; }
      set {
        publicId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NPC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NPC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Health, other.Health)) return false;
      if (PublicId != other.PublicId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Health != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Health);
      if (PublicId.Length != 0) hash ^= PublicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Health != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Health);
      }
      if (PublicId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PublicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Health != 0D) {
        size += 1 + 8;
      }
      if (PublicId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NPC other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Health != 0D) {
        Health = other.Health;
      }
      if (other.PublicId.Length != 0) {
        PublicId = other.PublicId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 17: {
            Health = input.ReadDouble();
            break;
          }
          case 26: {
            PublicId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BigMessageResponse : pb::IMessage<BigMessageResponse> {
    private static readonly pb::MessageParser<BigMessageResponse> _parser = new pb::MessageParser<BigMessageResponse>(() => new BigMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.BigMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigMessageResponse(BigMessageResponse other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      npcs_ = other.npcs_.Clone();
      chests_ = other.chests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigMessageResponse Clone() {
      return new BigMessageResponse(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::Protos.PlayerResponse player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.PlayerResponse Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "npcs" field.</summary>
    public const int NpcsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Protos.NPC>.Codec _map_npcs_codec
        = new pbc::MapField<string, global::Protos.NPC>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Protos.NPC.Parser), 18);
    private readonly pbc::MapField<string, global::Protos.NPC> npcs_ = new pbc::MapField<string, global::Protos.NPC>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Protos.NPC> Npcs {
      get { return npcs_; }
    }

    /// <summary>Field number for the "chests" field.</summary>
    public const int ChestsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_chests_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> chests_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Chests {
      get { return chests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if (!Npcs.Equals(other.Npcs)) return false;
      if(!chests_.Equals(other.chests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      hash ^= Npcs.GetHashCode();
      hash ^= chests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      npcs_.WriteTo(output, _map_npcs_codec);
      chests_.WriteTo(output, _repeated_chests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      size += npcs_.CalculateSize(_map_npcs_codec);
      size += chests_.CalculateSize(_repeated_chests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          player_ = new global::Protos.PlayerResponse();
        }
        Player.MergeFrom(other.Player);
      }
      npcs_.Add(other.npcs_);
      chests_.Add(other.chests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              player_ = new global::Protos.PlayerResponse();
            }
            input.ReadMessage(player_);
            break;
          }
          case 18: {
            npcs_.AddEntriesFrom(input, _map_npcs_codec);
            break;
          }
          case 26: {
            chests_.AddEntriesFrom(input, _repeated_chests_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BigMessage : pb::IMessage<BigMessage> {
    private static readonly pb::MessageParser<BigMessage> _parser = new pb::MessageParser<BigMessage>(() => new BigMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BigMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.BigMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigMessage(BigMessage other) : this() {
      code_ = other.code_;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BigMessage Clone() {
      return new BigMessage(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    private global::Protos.BigMessageResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.BigMessageResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BigMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BigMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (response_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BigMessage other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.response_ != null) {
        if (response_ == null) {
          response_ = new global::Protos.BigMessageResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            if (response_ == null) {
              response_ = new global::Protos.BigMessageResponse();
            }
            input.ReadMessage(response_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
